<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lZWUAH//2Q==
</value>
  </data>
</root>